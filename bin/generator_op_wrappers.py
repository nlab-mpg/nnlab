#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""
Generate codes for wrappers of tensorflow operators.
"""

from __future__ import absolute_import, print_function, division
import inspect

import tensorflow as tf
from tensorflow.python.ops import standard_ops, nn_ops

HEADER_TEMPLATE = """
#
# This file is automatically generated. Do not modify the codes here.
#

from tensorflow.python.ops import standard_ops, nn_ops
from . import functional as F

"""

WRAPPER_TEMPLATE = """
def FUNC_NAME(*args, **kwargs):
    args = F.tensor_to_tf(args)
    kwargs = F.tensor_to_tf(kwargs)
    result = MOD_NAME.FUNC_NAME(*args, **kwargs)
    return F.tensor_from_tf(result)
    
"""

TARGET_MODULES = [
    ("standard_ops", standard_ops),
    ("nn_ops", nn_ops)
]

if __name__ == '__main__':
    print(HEADER_TEMPLATE)
    for module_name, module in TARGET_MODULES:
        for op_name in dir(module):
            if not op_name.startswith("_") and op_name.islower():
                func_text = WRAPPER_TEMPLATE.replace("MOD_NAME", module_name).replace("FUNC_NAME", op_name)
                print(func_text)
